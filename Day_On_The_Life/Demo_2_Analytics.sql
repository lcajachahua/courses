DATABASE RETAIL;

/* PATH TO RETURN ANALYSIS */

/* STEP 1: CONSOLIDATE THE EVENTS */

DROP TABLE RETAIL_COMPNEW; 

CREATE TABLE RETAIL_COMPNEW
(CUSTOMER_ID,DATESTAMP,EVENT,CHURN_FLAG) AS 
(CURRENT VALIDTIME
SELECT CU.CUSTOMER_ID AS CUSTOMER_ID
    ,CC.CC_CALL_DT AS DATESTAMP
    ,CC.CALL_TYPE AS EVENT
    ,CU.CHURN_FLAG AS CHURN_FLAG
FROM CUSTOMER CU, CALL_CENTER_CALLS CC
WHERE CU.CUSTOMER_ID = CC.CUSTOMER_ID
UNION ALL
SELECT CU.CUSTOMER_ID AS CUSTOMER_ID
    ,ST.VISIT_DT AS DATESTAMP
    ,ST.ACTION AS EVENT
    ,CU.CHURN_FLAG AS CHURN_FLAG
FROM CUSTOMER CU, STORE_VISIT ST
WHERE CU.CUSTOMER_ID = ST.CUSTOMER_ID
UNION ALL
SELECT CU.CUSTOMER_ID AS CUSTOMER_ID
    ,WB.TD_TIMECODE AS DATESTAMP
    ,WB.PAGE AS EVENT
    ,CU.CHURN_FLAG AS CHURN_FLAG
FROM CUSTOMER CU, WEB WB
WHERE CU.CUSTOMER_ID = WB.CUSTOMER_ID)
WITH DATA;


SELECT * FROM RETAIL_COMPNEW WHERE CUSTOMER_ID=64497 ORDER BY DATESTAMP; 

SELECT COUNT(DISTINCT CUSTOMER_ID) NCLI, COUNT(1) N FROM  RETAIL_COMPNEW; --- 8,095 -- 27,771







/* STEP 2: CALL THE SESSIONIZE FUNCTION - CHURN CUSTOMERS */

DROP TABLE DAILY_SESSIONS_CHURN;

CREATE MULTISET TABLE DAILY_SESSIONS_CHURN AS(
    SELECT * FROM SESSIONIZE
         (ON (SELECT * FROM RETAIL_COMPNEW WHERE CHURN_FLAG = 'Y')
             PARTITION BY CUSTOMER_ID ORDER BY DATESTAMP
               USING
               TIMECOLUMN('DATESTAMP')
               TIMEOUT(604800) 
               ) AS DT) WITH DATA;


SELECT * FROM  DAILY_SESSIONS_CHURN ORDER BY 2 ASC WHERE CUSTOMER_ID=64497;

 





/* STEP 3: CALL THE NPATH FUNCTION - CUSTOMERS WHO RETURNED THE PRODUCT */

DROP TABLE NPATH_CHURN;

CREATE MULTISET TABLE NPATH_CHURN AS (SELECT * FROM NPATH
(ON DAILY_SESSIONS_CHURN PARTITION BY CUSTOMER_ID, SESSIONID ORDER BY DATESTAMP
    USING
    MODE(NONOVERLAPPING)
    PATTERN('E{1,5}.C')
    SYMBOLS
    (EVENT = 'Product Return'  AS C 
     ,EVENT <> 'Product Return' AS E)
    RESULT
    (   FIRST(CUSTOMER_ID OF ANY(E,C))    AS CUSTOMER_ID
       ,FIRST(DATESTAMP OF ANY(E,C))    AS DS_START
       ,LAST(DATESTAMP OF ANY(E,C))     AS DS_END
       ,COUNT(* OF E)                   AS EVENT_CNT
      ,ACCUMULATE(EVENT OF ANY(E,C))    AS PATH)
) AS DT) WITH DATA;


SELECT * FROM NPATH_CHURN WHERE CUSTOMER_ID=64497; 




/* STEP 4: MOST FREQUENT PATHS */

DROP TABLE PATH_TAB;

CREATE TABLE PATH_TAB AS
(SELECT TOP 100 path, COUNT(*) AS cnt
FROM NPATH_CHURN
GROUP BY path
ORDER BY cnt DESC)
WITH DATA;


SELECT * FROM PATH_TAB ORDER BY cnt DESC; 



SELECT EVENT, COUNT(1) N FROM  RETAIL_COMPNEW GROUP BY 1 ORDER BY 2 DESC;











/* ATTRIBUTION MODELS */

/* STEP #1 - DEFINE THE CONVERSION EVENT TABLE */

DROP TABLE ATTRIBUTION_CONVERSION; 

CREATE TABLE ATTRIBUTION_CONVERSION
(CONVERSION VARCHAR(100));

INSERT INTO ATTRIBUTION_CONVERSION VALUES ('Product Return');  

SELECT * FROM ATTRIBUTION_CONVERSION; 



/* STEP #2 - RUN THE QUERY, JOINING THE 4 RESULTS TOGETHER, SAVING RESULTS TO A TABLE */

DROP TABLE ATTRIBUTION_4MODEL_OUTPUT; 

CREATE TABLE ATTRIBUTION_4MODEL_OUTPUT
AS (
SELECT F.CUSTOMER_ID, F.DATESTAMP, F.EVENT
      ,F.ATTRIBUTION AS FIRST_CLICK_ATTRIBUTION
      ,L.ATTRIBUTION AS LAST_CLICK_ATTRIBUTION
      ,U.ATTRIBUTION AS UNIFORM_ATTRIBUTION
      ,E.ATTRIBUTION AS EXPONENTIAL_ATTRIBUTION
FROM ATTRIBUTION
     (
         ON RETAIL_COMPNEW              AS INPUT
         PARTITION BY CUSTOMER_ID
         ORDER BY DATESTAMP   
         ON ATTRIBUTION_CONVERSION      AS CONVERSION    DIMENSION
         ON ATTRIBUTION_MODEL_FIRST_CLICK    AS MODEL1        DIMENSION
         USING
         eventcolumn ('EVENT') 	
         TimestampColumn ('DATESTAMP')
         WindowSize('SECONDS:604800') 
     ) F
    ,ATTRIBUTION
     (
         ON RETAIL_COMPNEW               AS INPUT
         PARTITION BY CUSTOMER_ID
         ORDER BY DATESTAMP   
         ON ATTRIBUTION_CONVERSION      AS CONVERSION    DIMENSION
         ON ATTRIBUTION_MODEL_LAST_CLICK     AS MODEL1        DIMENSION
         USING
         eventcolumn ('EVENT') 
         TimestampColumn ('DATESTAMP')
         WindowSize('SECONDS:604800') 
     ) L
    ,ATTRIBUTION
     (
         ON RETAIL_COMPNEW               AS INPUT
         PARTITION BY CUSTOMER_ID
         ORDER BY DATESTAMP   
         ON ATTRIBUTION_CONVERSION      AS CONVERSION    DIMENSION
         ON ATTRIBUTION_MODEL_UNIFORM        AS MODEL1        DIMENSION
         USING
         eventcolumn ('EVENT') 	
         TimestampColumn ('DATESTAMP')	
         WindowSize('SECONDS:604800')       
      ) U
    ,ATTRIBUTION
     (
         ON RETAIL_COMPNEW               AS INPUT
         PARTITION BY CUSTOMER_ID
         ORDER BY DATESTAMP   
         ON ATTRIBUTION_CONVERSION      AS CONVERSION    DIMENSION
         ON ATTRIBUTION_MODEL_EXPONENTIAL    AS MODEL1        DIMENSION
         USING
         eventcolumn ('EVENT') 
         TimestampColumn ('DATESTAMP')
         WindowSize('SECONDS:604800') 
     ) E
WHERE F.CUSTOMER_ID = L.CUSTOMER_ID
AND   F.CUSTOMER_ID = U.CUSTOMER_ID
AND   F.CUSTOMER_ID = E.CUSTOMER_ID
AND   F.DATESTAMP = L.DATESTAMP
AND   F.DATESTAMP = U.DATESTAMP
AND   F.DATESTAMP = E.DATESTAMP
AND   F.EVENT     = L.EVENT
AND   F.EVENT     = U.EVENT
AND   F.EVENT     = E.EVENT
)
WITH DATA;

/* DATA CHECK - EXAMPLE OUTPUT:*/

SELECT * FROM ATTRIBUTION_4MODEL_OUTPUT ORDER BY 2 ASC WHERE CUSTOMER_ID=66592;


/* SUM UP THE ATTRIBUTION FOR EACH EVENT/MODEL COMBINATION */

SELECT EVENT
       ,SUM(FIRST_CLICK_ATTRIBUTION) AS FIRST_CLICK_ATTRIBUTION
       ,SUM(LAST_CLICK_ATTRIBUTION)  AS LAST_CLICK_ATTRIBUTION
       ,SUM(UNIFORM_ATTRIBUTION)     AS UNIFORM_ATTRIBUTION
       ,SUM(EXPONENTIAL_ATTRIBUTION) AS EXPONENTIAL_ATTRIBUTION
FROM ATTRIBUTION_4MODEL_OUTPUT
GROUP BY EVENT
ORDER BY 1 DESC; 









DROP TABLE RETAIL_COMPNEW; 
 
DROP TABLE DAILY_SESSIONS_CHURN;

DROP TABLE NPATH_CHURN;

DROP TABLE PATH_TAB;

DROP TABLE ATTRIBUTION_CONVERSION; 

DROP TABLE ATTRIBUTION_4MODEL_OUTPUT;
